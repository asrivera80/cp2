PS C:\Users\asanchez\Documents\GitHub\cp2\terraform> C:\Users\asanchez\Documents\DEVOPS_CLOUD\CASO2\terraform.exe apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_linux_virtual_machine.master will be created
  + resource "azurerm_linux_virtual_machine" "master" {
      + admin_username                  = "azureuser"
      + allow_extension_operations      = true
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "ukwest"
      + max_bid_price                   = -1
      + name                            = "master"
      + network_interface_ids           = (known after apply)
      + patch_mode                      = "ImageDefault"
      + platform_fault_domain           = -1
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "rg-k8"
      + size                            = "Standard_DS2_v2"
      + tags                            = {
          + "environment" = "CP2"
        }
      + virtual_machine_id              = (known after apply)

      + admin_ssh_key {
          + public_key = <<-EOT
                ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDYY3VhI1bdJrRlnuaYPICIvpbXXai1zNU2EXaQY/lv8C/iwnnGVGTZyJF/BiCv3oKQjn3YJzlSIQFiose6QtMqQZSfnXWtZWyGXDZFfKVtZvy5LRlYUeDbUMocUQkqyyXgdDsE7Ykl4sNvOWvXLBPvQGK6PdGmKec7SUuLPl+oFXb+TyaotdvydJVVxwwgLvZlq9rX1ZMOBTszF7uff29glETDZJs77fLAFI+/qZxnVuvP0658T0V/kIORnna6/Qawygj/sy9S0ApuG/XtiY74D/1xQnAM9cARDBEdiAqEa6JeemsksJ7akwVUSeJneLAaBlnKf8aq+UQ5trS1UZXb/C8M847ugxN8p29rxUmsnJj62md3vxTP4e8nA5uOwObB2QFVxh+mUXmFVwH4bBnsEr9GOlP1KIuXaH5WiDpAoNXeoqTg7CUJ4C1j3iv1Nk7Hz0wMIJB5FL6F5jOrehS3K5GWa9rZm9CVdWzZMnnG/ttV4oFHkt4wNJ235IezZiM= asanchez@POR051
            EOT
          + username   = "azureuser"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + plan {
          + name      = "centos-8-stream-free"
          + product   = "centos-8-stream-free"
          + publisher = "cognosys"
        }

      + source_image_reference {
          + offer     = "centos-8-stream-free"
          + publisher = "cognosys"
          + sku       = "centos-8-stream-free"
          + version   = "22.03.28"
        }

      + termination_notification {
          + enabled = (known after apply)
          + timeout = (known after apply)
        }
    }

  # azurerm_linux_virtual_machine.vm[0] will be created
  + resource "azurerm_linux_virtual_machine" "vm" {
      + admin_username                  = "azureuser"
      + allow_extension_operations      = true
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "ukwest"
      + max_bid_price                   = -1
      + name                            = "worker1"
      + network_interface_ids           = (known after apply)
      + patch_mode                      = "ImageDefault"
      + platform_fault_domain           = -1
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "rg-k8"
      + size                            = "Standard_D1_v2"
      + tags                            = {
          + "environment" = "CP2"
        }
      + virtual_machine_id              = (known after apply)

      + admin_ssh_key {
          + public_key = <<-EOT
                ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDYY3VhI1bdJrRlnuaYPICIvpbXXai1zNU2EXaQY/lv8C/iwnnGVGTZyJF/BiCv3oKQjn3YJzlSIQFiose6QtMqQZSfnXWtZWyGXDZFfKVtZvy5LRlYUeDbUMocUQkqyyXgdDsE7Ykl4sNvOWvXLBPvQGK6PdGmKec7SUuLPl+oFXb+TyaotdvydJVVxwwgLvZlq9rX1ZMOBTszF7uff29glETDZJs77fLAFI+/qZxnVuvP0658T0V/kIORnna6/Qawygj/sy9S0ApuG/XtiY74D/1xQnAM9cARDBEdiAqEa6JeemsksJ7akwVUSeJneLAaBlnKf8aq+UQ5trS1UZXb/C8M847ugxN8p29rxUmsnJj62md3vxTP4e8nA5uOwObB2QFVxh+mUXmFVwH4bBnsEr9GOlP1KIuXaH5WiDpAoNXeoqTg7CUJ4C1j3iv1Nk7Hz0wMIJB5FL6F5jOrehS3K5GWa9rZm9CVdWzZMnnG/ttV4oFHkt4wNJ235IezZiM= asanchez@POR051
            EOT
          + username   = "azureuser"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + plan {
          + name      = "centos-8-stream-free"
          + product   = "centos-8-stream-free"
          + publisher = "cognosys"
        }

      + source_image_reference {
          + offer     = "centos-8-stream-free"
          + publisher = "cognosys"
          + sku       = "centos-8-stream-free"
          + version   = "22.03.28"
        }

      + termination_notification {
          + enabled = (known after apply)
          + timeout = (known after apply)
        }
    }

  # azurerm_linux_virtual_machine.vm[1] will be created
  + resource "azurerm_linux_virtual_machine" "vm" {
      + admin_username                  = "azureuser"
      + allow_extension_operations      = true
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "ukwest"
      + max_bid_price                   = -1
      + name                            = "nfs"
      + network_interface_ids           = (known after apply)
      + patch_mode                      = "ImageDefault"
      + platform_fault_domain           = -1
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "rg-k8"
      + size                            = "Standard_D1_v2"
      + tags                            = {
          + "environment" = "CP2"
        }
      + virtual_machine_id              = (known after apply)

      + admin_ssh_key {
          + public_key = <<-EOT
                ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDYY3VhI1bdJrRlnuaYPICIvpbXXai1zNU2EXaQY/lv8C/iwnnGVGTZyJF/BiCv3oKQjn3YJzlSIQFiose6QtMqQZSfnXWtZWyGXDZFfKVtZvy5LRlYUeDbUMocUQkqyyXgdDsE7Ykl4sNvOWvXLBPvQGK6PdGmKec7SUuLPl+oFXb+TyaotdvydJVVxwwgLvZlq9rX1ZMOBTszF7uff29glETDZJs77fLAFI+/qZxnVuvP0658T0V/kIORnna6/Qawygj/sy9S0ApuG/XtiY74D/1xQnAM9cARDBEdiAqEa6JeemsksJ7akwVUSeJneLAaBlnKf8aq+UQ5trS1UZXb/C8M847ugxN8p29rxUmsnJj62md3vxTP4e8nA5uOwObB2QFVxh+mUXmFVwH4bBnsEr9GOlP1KIuXaH5WiDpAoNXeoqTg7CUJ4C1j3iv1Nk7Hz0wMIJB5FL6F5jOrehS3K5GWa9rZm9CVdWzZMnnG/ttV4oFHkt4wNJ235IezZiM= asanchez@POR051
            EOT
          + username   = "azureuser"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + plan {
          + name      = "centos-8-stream-free"
          + product   = "centos-8-stream-free"
          + publisher = "cognosys"
        }

      + source_image_reference {
          + offer     = "centos-8-stream-free"
          + publisher = "cognosys"
          + sku       = "centos-8-stream-free"
          + version   = "22.03.28"
        }

      + termination_notification {
          + enabled = (known after apply)
          + timeout = (known after apply)
        }
    }

  # azurerm_network_interface.NicMaster will be created
  + resource "azurerm_network_interface" "NicMaster" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "ukwest"
      + mac_address                   = (known after apply)
      + name                          = "nic-master"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "rg-k8"
      + tags                          = {
          + "environment" = "CP2"
        }
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "ipconf-master"
          + primary                                            = (known after apply)
          + private_ip_address                                 = "10.0.1.10"
          + private_ip_address_allocation                      = "Static"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface.NicWorker[0] will be created
  + resource "azurerm_network_interface" "NicWorker" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "ukwest"
      + mac_address                   = (known after apply)
      + name                          = "nic-worker1"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "rg-k8"
      + tags                          = {
          + "environment" = "CP2"
        }
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "ipconf-worker1"
          + primary                                            = (known after apply)
          + private_ip_address                                 = "10.0.1.11"
          + private_ip_address_allocation                      = "Static"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface.NicWorker[1] will be created
  + resource "azurerm_network_interface" "NicWorker" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "ukwest"
      + mac_address                   = (known after apply)
      + name                          = "nic-nfs"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "rg-k8"
      + tags                          = {
          + "environment" = "CP2"
        }
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "ipconf-nfs"
          + primary                                            = (known after apply)
          + private_ip_address                                 = "10.0.1.12"
          + private_ip_address_allocation                      = "Static"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface_security_group_association.mySecGroupAssociation1 will be created
  + resource "azurerm_network_interface_security_group_association" "mySecGroupAssociation1" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_interface_security_group_association.mySecGroupAssociation2[0] will be created
  + resource "azurerm_network_interface_security_group_association" "mySecGroupAssociation2" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_interface_security_group_association.mySecGroupAssociation2[1] will be created
  + resource "azurerm_network_interface_security_group_association" "mySecGroupAssociation2" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_security_group.mySecGroup will be created
  + resource "azurerm_network_security_group" "mySecGroup" {
      + id                  = (known after apply)
      + location            = "ukwest"
      + name                = "sshtraffic"
      + resource_group_name = "rg-k8"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "SSH"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
      + tags                = {
          + "environment" = "CP2"
        }
    }

  # azurerm_public_ip.pubmaster will be created
  + resource "azurerm_public_ip" "pubmaster" {
      + allocation_method       = "Dynamic"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "ukwest"
      + name                    = "ip_public-master"
      + resource_group_name     = "rg-k8"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
      + tags                    = {
          + "environment" = "CP2"
        }
    }

  # azurerm_public_ip.pubworker[0] will be created
  + resource "azurerm_public_ip" "pubworker" {
      + allocation_method       = "Dynamic"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "ukwest"
      + name                    = "ip_public-worker1"
      + resource_group_name     = "rg-k8"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
      + tags                    = {
          + "environment" = "CP2"
        }
    }

  # azurerm_public_ip.pubworker[1] will be created
  + resource "azurerm_public_ip" "pubworker" {
      + allocation_method       = "Dynamic"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "ukwest"
      + name                    = "ip_public-nfs"
      + resource_group_name     = "rg-k8"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
      + tags                    = {
          + "environment" = "CP2"
        }
    }

  # azurerm_resource_group.rg-k8 will be created
  + resource "azurerm_resource_group" "rg-k8" {
      + id       = (known after apply)
      + location = "ukwest"
      + name     = "rg-k8"
      + tags     = {
          + "environment" = "CP2"
        }
    }

  # azurerm_storage_account.stAccount will be created
  + resource "azurerm_storage_account" "stAccount" {
      + access_tier                       = (known after apply)
      + account_kind                      = "StorageV2"
      + account_replication_type          = "LRS"
      + account_tier                      = "Standard"
      + allow_nested_items_to_be_public   = true
      + cross_tenant_replication_enabled  = true
      + enable_https_traffic_only         = true
      + id                                = (known after apply)
      + infrastructure_encryption_enabled = false
      + is_hns_enabled                    = false
      + large_file_share_enabled          = (known after apply)
      + location                          = "ukwest"
      + min_tls_version                   = "TLS1_2"
      + name                              = "staccountcp2"
      + nfsv3_enabled                     = false
      + primary_access_key                = (sensitive value)
      + primary_blob_connection_string    = (sensitive value)
      + primary_blob_endpoint             = (known after apply)
      + primary_blob_host                 = (known after apply)
      + primary_connection_string         = (sensitive value)
      + primary_dfs_endpoint              = (known after apply)
      + primary_dfs_host                  = (known after apply)
      + primary_file_endpoint             = (known after apply)
      + primary_file_host                 = (known after apply)
      + primary_location                  = (known after apply)
      + primary_queue_endpoint            = (known after apply)
      + primary_queue_host                = (known after apply)
      + primary_table_endpoint            = (known after apply)
      + primary_table_host                = (known after apply)
      + primary_web_endpoint              = (known after apply)
      + primary_web_host                  = (known after apply)
      + queue_encryption_key_type         = "Service"
      + resource_group_name               = "rg-k8"
      + secondary_access_key              = (sensitive value)
      + secondary_blob_connection_string  = (sensitive value)
      + secondary_blob_endpoint           = (known after apply)
      + secondary_blob_host               = (known after apply)
      + secondary_connection_string       = (sensitive value)
      + secondary_dfs_endpoint            = (known after apply)
      + secondary_dfs_host                = (known after apply)
      + secondary_file_endpoint           = (known after apply)
      + secondary_file_host               = (known after apply)
      + secondary_location                = (known after apply)
      + secondary_queue_endpoint          = (known after apply)
      + secondary_queue_host              = (known after apply)
      + secondary_table_endpoint          = (known after apply)
      + secondary_table_host              = (known after apply)
      + secondary_web_endpoint            = (known after apply)
      + secondary_web_host                = (known after apply)
      + shared_access_key_enabled         = true
      + table_encryption_key_type         = "Service"
      + tags                              = {
          + "environment" = "CP2"
        }

      + blob_properties {
          + change_feed_enabled      = (known after apply)
          + default_service_version  = (known after apply)
          + last_access_time_enabled = (known after apply)
          + versioning_enabled       = (known after apply)

          + container_delete_retention_policy {
              + days = (known after apply)
            }

          + cors_rule {
              + allowed_headers    = (known after apply)
              + allowed_methods    = (known after apply)
              + allowed_origins    = (known after apply)
              + exposed_headers    = (known after apply)
              + max_age_in_seconds = (known after apply)
            }

          + delete_retention_policy {
              + days = (known after apply)
            }
        }

      + network_rules {
          + bypass                     = (known after apply)
          + default_action             = (known after apply)
          + ip_rules                   = (known after apply)
          + virtual_network_subnet_ids = (known after apply)

          + private_link_access {
              + endpoint_resource_id = (known after apply)
              + endpoint_tenant_id   = (known after apply)
            }
        }

      + queue_properties {
          + cors_rule {
              + allowed_headers    = (known after apply)
              + allowed_methods    = (known after apply)
              + allowed_origins    = (known after apply)
              + exposed_headers    = (known after apply)
              + max_age_in_seconds = (known after apply)
            }

          + hour_metrics {
              + enabled               = (known after apply)
              + include_apis          = (known after apply)
              + retention_policy_days = (known after apply)
              + version               = (known after apply)
            }

          + logging {
              + delete                = (known after apply)
              + read                  = (known after apply)
              + retention_policy_days = (known after apply)
              + version               = (known after apply)
              + write                 = (known after apply)
            }

          + minute_metrics {
              + enabled               = (known after apply)
              + include_apis          = (known after apply)
              + retention_policy_days = (known after apply)
              + version               = (known after apply)
            }
        }

      + routing {
          + choice                      = (known after apply)
          + publish_internet_endpoints  = (known after apply)
          + publish_microsoft_endpoints = (known after apply)
        }

      + share_properties {
          + cors_rule {
              + allowed_headers    = (known after apply)
              + allowed_methods    = (known after apply)
              + allowed_origins    = (known after apply)
              + exposed_headers    = (known after apply)
              + max_age_in_seconds = (known after apply)
            }

          + retention_policy {
              + days = (known after apply)
            }

          + smb {
              + authentication_types            = (known after apply)
              + channel_encryption_type         = (known after apply)
              + kerberos_ticket_encryption_type = (known after apply)
              + versions                        = (known after apply)
            }
        }
    }

  # azurerm_subnet.mySubnet will be created
  + resource "azurerm_subnet" "mySubnet" {
      + address_prefixes                               = [
          + "10.0.1.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "terraformsubnet"
      + resource_group_name                            = "rg-k8"
      + virtual_network_name                           = "kubernetesnet"
    }

  # azurerm_virtual_network.myNet will be created
  + resource "azurerm_virtual_network" "myNet" {
      + address_space       = [
          + "10.0.0.0/16",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "ukwest"
      + name                = "kubernetesnet"
      + resource_group_name = "rg-k8"
      + subnet              = (known after apply)
      + tags                = {
          + "environment" = "CP2"
        }
    }

Plan: 17 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + network_interface_master = (known after apply)
  + public_ip_address_master = (known after apply)
  + resource_group_id        = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

azurerm_resource_group.rg-k8: Creating...
azurerm_resource_group.rg-k8: Creation complete after 1s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8]
azurerm_public_ip.pubmaster: Creating...
azurerm_virtual_network.myNet: Creating...
azurerm_network_security_group.mySecGroup: Creating...
azurerm_public_ip.pubworker[0]: Creating...
azurerm_public_ip.pubworker[1]: Creating...
azurerm_storage_account.stAccount: Creating...
azurerm_public_ip.pubworker[0]: Creation complete after 4s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/publicIPAddresses/ip_public-worker1]
azurerm_public_ip.pubmaster: Creation complete after 4s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/publicIPAddresses/ip_public-master]
azurerm_public_ip.pubworker[1]: Creation complete after 4s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/publicIPAddresses/ip_public-nfs]
azurerm_network_security_group.mySecGroup: Creation complete after 6s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/networkSecurityGroups/sshtraffic]
azurerm_virtual_network.myNet: Creation complete after 7s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/virtualNetworks/kubernetesnet]
azurerm_subnet.mySubnet: Creating...
azurerm_storage_account.stAccount: Still creating... [10s elapsed]
azurerm_subnet.mySubnet: Creation complete after 4s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/virtualNetworks/kubernetesnet/subnets/terraformsubnet]
azurerm_network_interface.NicMaster: Creating...
azurerm_network_interface.NicWorker[0]: Creating...
azurerm_network_interface.NicWorker[1]: Creating...
azurerm_network_interface.NicWorker[0]: Creation complete after 2s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/networkInterfaces/nic-worker1]
azurerm_network_interface.NicMaster: Creation complete after 3s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/networkInterfaces/nic-master]
azurerm_network_interface_security_group_association.mySecGroupAssociation1: Creating...
azurerm_linux_virtual_machine.master: Creating...
azurerm_network_interface_security_group_association.mySecGroupAssociation1: Creation complete after 1s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/networkInterfaces/nic-master|/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/networkSecurityGroups/sshtraffic]
azurerm_network_interface.NicWorker[1]: Creation complete after 4s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/networkInterfaces/nic-nfs]
azurerm_network_interface_security_group_association.mySecGroupAssociation2[1]: Creating...
azurerm_network_interface_security_group_association.mySecGroupAssociation2[0]: Creating...
azurerm_linux_virtual_machine.vm[0]: Creating...
azurerm_linux_virtual_machine.vm[1]: Creating...
azurerm_network_interface_security_group_association.mySecGroupAssociation2[1]: Creation complete after 1s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/networkInterfaces/nic-nfs|/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/networkSecurityGroups/sshtraffic]
azurerm_network_interface_security_group_association.mySecGroupAssociation2[0]: Creation complete after 2s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/networkInterfaces/nic-worker1|/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Network/networkSecurityGroups/sshtraffic]
azurerm_storage_account.stAccount: Still creating... [20s elapsed]
azurerm_linux_virtual_machine.master: Still creating... [10s elapsed]
azurerm_linux_virtual_machine.vm[1]: Still creating... [10s elapsed]
azurerm_linux_virtual_machine.vm[0]: Still creating... [10s elapsed]
azurerm_storage_account.stAccount: Still creating... [30s elapsed]
azurerm_storage_account.stAccount: Creation complete after 31s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Storage/storageAccounts/staccountcp2]
azurerm_linux_virtual_machine.master: Still creating... [20s elapsed]
azurerm_linux_virtual_machine.vm[0]: Still creating... [20s elapsed]
azurerm_linux_virtual_machine.vm[1]: Still creating... [20s elapsed]
azurerm_linux_virtual_machine.master: Still creating... [30s elapsed]
azurerm_linux_virtual_machine.vm[1]: Still creating... [30s elapsed]
azurerm_linux_virtual_machine.vm[0]: Still creating... [30s elapsed]
azurerm_linux_virtual_machine.master: Still creating... [40s elapsed]
azurerm_linux_virtual_machine.vm[1]: Still creating... [40s elapsed]
azurerm_linux_virtual_machine.vm[0]: Still creating... [41s elapsed]
azurerm_linux_virtual_machine.master: Still creating... [50s elapsed]
azurerm_linux_virtual_machine.vm[1]: Still creating... [50s elapsed]
azurerm_linux_virtual_machine.vm[0]: Still creating... [51s elapsed]
azurerm_linux_virtual_machine.vm[0]: Creation complete after 53s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Compute/virtualMachines/worker1]
azurerm_linux_virtual_machine.vm[1]: Creation complete after 53s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Compute/virtualMachines/nfs]
azurerm_linux_virtual_machine.master: Creation complete after 58s [id=/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8/providers/Microsoft.Compute/virtualMachines/master]

Apply complete! Resources: 17 added, 0 changed, 0 destroyed.

Outputs:

network_interface_master = "10.0.1.10"
public_ip_address_master = ""
resource_group_id = "/subscriptions/02136a8e-9e5e-4b4f-ad2c-9367f3c42853/resourceGroups/rg-k8"